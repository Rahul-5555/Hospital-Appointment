import React, { useState } from "react";
import { useNavigate } from "react-router-dom";

const BookAppointment = () => {
  const [doctorId, setDoctorId] = useState("");
  const [date, setDate] = useState("");
  const [from, setFrom] = useState("");
  const [to, setTo] = useState("");
  const [error, setError] = useState("");
  const navigate = useNavigate();

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const response = await fetch("http://localhost:5000/api/appointments/book", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          doctorId,
          date,
          from,
          to,
        }),
      });

      if (response.ok) {
        navigate("/appointments"); // Redirect to the appointments page
      } else {
        const data = await response.json();
        setError(data.message || "Failed to book appointment");
      }
    } catch (err) {
      setError("An error occurred while booking the appointment");
      console.error(err);
    }
  };

  return (
    <div className="flex justify-center items-center min-h-screen bg-gray-50">
      <div className="bg-white p-8 rounded-lg shadow-lg w-full max-w-md">
        <h2 className="text-2xl font-semibold text-center text-gray-700 mb-6">
          Book an Appointment
        </h2>

        {error && <p className="text-red-500 text-center mb-4">{error}</p>}

        <form onSubmit={handleSubmit}>
          <div className="mb-4">
            <label htmlFor="doctorId" className="block text-gray-700 font-medium">
              Doctor ID
            </label>
            <input
              type="text"
              id="doctorId"
              className="mt-1 block w-full border-gray-300 rounded-md shadow-sm"
              value={doctorId}
              onChange={(e) => setDoctorId(e.target.value)}
              required
            />
          </div>

          <div className="mb-4">
            <label htmlFor="date" className="block text-gray-700 font-medium">
              Date
            </label>
            <input
              type="date"
              id="date"
              className="mt-1 block w-full border-gray-300 rounded-md shadow-sm"
              value={date}
              onChange={(e) => setDate(e.target.value)}
              required
            />
          </div>

          <div className="mb-4">
            <label htmlFor="from" className="block text-gray-700 font-medium">
              From
            </label>
            <input
              type="time"
              id="from"
              className="mt-1 block w-full border-gray-300 rounded-md shadow-sm"
              value={from}
              onChange={(e) => setFrom(e.target.value)}
              required
            />
          </div>

          <div className="mb-4">
            <label htmlFor="to" className="block text-gray-700 font-medium">
              To
            </label>
            <input
              type="time"
              id="to"
              className="mt-1 block w-full border-gray-300 rounded-md shadow-sm"
              value={to}
              onChange={(e) => setTo(e.target.value)}
              required
            />
          </div>

          <button
            type="submit"
            className="w-full bg-blue-600 text-white font-medium py-2 px-4 rounded-md shadow-md hover:bg-blue-700"
          >
            Book Appointment
          </button>
        </form>
      </div>
    </div>
  );
};

export default BookAppointment;
